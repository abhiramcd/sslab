#include <stdio.h>
int main()
{
    int i,limit,n,total=0,x,counter=0,time_quantum,tt,wt;
    int wait_time=0,turnaround_time=0,arrival_time[10],burst_time[10],rem[10];
    float average_wait_time,average_turnaround_time;
    printf("enter total number of processess:");
    scanf("%d",&limit);
    for(i=0;i<limit;i++)
    {
        printf("\nenter details of process[%d]:",i+1);
        printf("\narrival time:");
        scanf("%d",&arrival_time[i]);
        printf("\nBurst time:");
        scanf("%d",&burst_time[i]);
        rem[i]=burst_time[i];
    }
    printf("enter time quantum:");
    scanf("%d",&time_quantum);
    printf("\nProcess ID\t Burst time \t Turnaround time\t Waiting time\n");
    n=limit;
    while(limit)
    {
        i=0;
        while(i<n)
        {
            if(rem[i]<=time_quantum&&rem[i]>0)
            {
                total=total+rem[i];
                rem[i]=0;
                counter=1;
            }
            else if(rem[i]>0)
            {
                total=total+time_quantum;
                rem[i]=rem[i]-time_quantum;
            }
            if(rem[i]==0&&counter==1)
            {
                limit--;
                tt=total-arrival_time[i];
                wt=tt-burst_time[i];
                printf("\nProcess[%d]\t\t\t%d\t\t\t%d\t\t\t%d\n",i+1,burst_time[i],tt,wt);
                wait_time=wait_time+wt;
                turnaround_time=turnaround_time+tt;
                counter=0;
            }
            if(arrival_time[i+1]<+total)
            {
                i++;
            }
            else
            {
                i=0;
            }
        }
    }
    average_wait_time=wait_time*1.0/n;
    average_turnaround_time=turnaround_time*1.0/n;
    printf("\nAverage waiting time:%f",average_wait_time);
    printf("\nAverage turnaround time:%f",average_turnaround_time );
    return 0;
}
